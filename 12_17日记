首先看了LeggedRobotCfg类的定义
class LeggedRobotCfg(BaseConfig):
    class env:
        num_envs = 4096 #环境数
        num_observations = 27 #每个环境下基本观测维度，组成是？？？
        num_privileged_obs = (
            num_observations + 7 * 11 + 3 + 6 * 5 + 3 + 3
        )  # if not None a priviledge_obs_buf will be returned by step() (critic obs for assymetric training). None is returned otherwise
           # 扩展观测维度，组成是？？？       
        obs_history_length = 5  # number of observations stacked together
        obs_history_dec = 1
        num_actions = 6
        env_spacing = 3.0  # not used with heightfields/trimeshes
        send_timeouts = True  # send time out information to the algorithm
        episode_length_s = 20  # episode length in seconds
        dof_vel_use_pos_diff = True
        fail_to_terminal_time_s = 1
在class Legged_Robot中，定义本体观测:27=6+6+6+3+3+3:
      def compute_proprioception_observations(self):
            # note that observation noise need to modified accordingly !!!
            obs_buf = torch.cat(                                 #张量整合函数
                (
                    # self.base_lin_vel * self.obs_scales.lin_vel,
                    self.base_ang_vel * self.obs_scales.ang_vel, #IMU角速度 3列
                    self.projected_gravity,                      #投影重力 3列
                    self.commands[:, :3] * self.commands_scale,  #当前命令 前3列
                    (self.dof_pos - self.default_dof_pos) * self.obs_scales.dof_pos,# 关节位置 6列
                    self.dof_vel * self.obs_scales.dof_vel,      # 关节速度 6列
                    self.actions,                                #关节力矩 6列
                ),
                dim=-1,
            )
            return obs_buf
在class Legged_Robot中，定义如下：self.privileged_obs_buf=27 + 3 + 6 * 5 + 3 + 3
 self.privileged_obs_buf = torch.cat(
                (                                                                   #WBR机器人
                    self.base_lin_vel * self.obs_scales.lin_vel,                    #直线速度 3
                    self.obs_buf,                                                   #基本观测 27
                    self.last_actions[:, :, 0],                                     
                    self.last_actions[:, :, 1],                                     #前两个时间步的动作 2*6
                    self.dof_acc * self.obs_scales.dof_acc,                         #关节加速度 6
                    heights,                                                        #高度 1
                    self.torques * self.obs_scales.torque,                          #力矩 6
                    (self.base_mass - self.base_mass.mean()).view(self.num_envs, 1),#重塑质量 1
                    self.base_com,                                                  #基座重心坐标 3
                    self.default_dof_pos - self.raw_default_dof_pos,                #关节位置相对原始位置 6
                    self.friction_coef.view(self.num_envs, 1),                      #摩擦系数 1
                    self.restitution_coef.view(self.num_envs, 1),                   #弹性系数 1
                ),
                dim=-1,
在LeggedRobotRough中，重写了该类:
       self.privileged_obs_buf = torch.cat(
                (
                    self.base_lin_vel * self.obs_scales.lin_vel,        
                    self.obs_buf[:, :-77],                                         #                                  
                    self.last_actions[:, :, 0],                         
                    self.last_actions[:, :, 1],                         
                    self.dof_acc * self.obs_scales.dof_acc,             
                    heights,                                            
                    self.torques * self.obs_scales.torque,              
                    (self.base_mass - self.base_mass.mean()).view(self.num_envs, 1),
                    self.base_com,
                    self.default_dof_pos - self.raw_default_dof_pos,
                    self.friction_coef.view(self.num_envs, 1),
                    self.restitution_coef.view(self.num_envs, 1),
                ),
                dim=-1,
            )



